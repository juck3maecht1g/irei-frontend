{"ast":null,"code":"export async function passDataDirect(set, fetched, setfetched, adress) {\n  if (fetched) {\n    return;\n  }\n  setfetched(true);\n  const data = await (await fetch(adress)).json().then(data => {\n    set(data);\n  });\n}\nexport async function passDataAsMap(set, fetched, setfetched, adress) {\n  if (fetched) {\n    return;\n  }\n  setfetched(true);\n  const data = await (await fetch(adress)).json().then(data => {\n    var dir = new Map(Object.entries(data));\n    set(dir);\n  });\n}\nexport async function post(content, postAdress) {\n  const response = await fetch(postAdress, {\n    'method': 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(content)\n  });\n  return (await response.text()).toString();\n}","map":{"version":3,"names":["passDataDirect","set","fetched","setfetched","adress","data","fetch","json","then","passDataAsMap","dir","Map","Object","entries","post","content","postAdress","response","headers","body","JSON","stringify","text","toString"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/backendComunication/BasicOpperations.tsx"],"sourcesContent":["\n\nexport async function passDataDirect(set, fetched, setfetched, adress){\n\n    if(fetched) {\n        return\n        }\n        setfetched (true)\n        const data = await (\n            await fetch(\n            adress\n            )\n        ).json().then(data => {\n            set(data)\n        }\n        )\n}\n\nexport async function passDataAsMap(set, fetched, setfetched, adress){\n\n    if(fetched) {\n        return\n        }\n        setfetched (true)\n        const data = await (\n            await fetch(\n            adress\n            )\n        ).json().then(data => {\n            var dir = new Map(Object.entries(data))\n            set(dir)\n        }\n        )\n}\n\n\nexport async function post (content, postAdress){\n    const response = await fetch(postAdress, {\n        'method': 'POST',\n        headers : {\n        'Content-Type': 'application/json'\n        },\n        body : JSON.stringify(content)\n    })\n    return (await response.text()).toString()\n\n}  "],"mappings":"AAEA,OAAO,eAAeA,cAAc,CAACC,GAAG,EAAEC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAC;EAElE,IAAGF,OAAO,EAAE;IACR;EACA;EACAC,UAAU,CAAE,IAAI,CAAC;EACjB,MAAME,IAAI,GAAG,MAAM,CACf,MAAMC,KAAK,CACXF,MAAM,CACL,EACHG,IAAI,EAAE,CAACC,IAAI,CAACH,IAAI,IAAI;IAClBJ,GAAG,CAACI,IAAI,CAAC;EACb,CAAC,CACA;AACT;AAEA,OAAO,eAAeI,aAAa,CAACR,GAAG,EAAEC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAC;EAEjE,IAAGF,OAAO,EAAE;IACR;EACA;EACAC,UAAU,CAAE,IAAI,CAAC;EACjB,MAAME,IAAI,GAAG,MAAM,CACf,MAAMC,KAAK,CACXF,MAAM,CACL,EACHG,IAAI,EAAE,CAACC,IAAI,CAACH,IAAI,IAAI;IAClB,IAAIK,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,OAAO,CAACR,IAAI,CAAC,CAAC;IACvCJ,GAAG,CAACS,GAAG,CAAC;EACZ,CAAC,CACA;AACT;AAGA,OAAO,eAAeI,IAAI,CAAEC,OAAO,EAAEC,UAAU,EAAC;EAC5C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACU,UAAU,EAAE;IACrC,QAAQ,EAAE,MAAM;IAChBE,OAAO,EAAG;MACV,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACN,OAAO;EACjC,CAAC,CAAC;EACF,OAAO,CAAC,MAAME,QAAQ,CAACK,IAAI,EAAE,EAAEC,QAAQ,EAAE;AAE7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}