{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ChooseListPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport { GetActionListNames, SetActionList, CreatetActionList } from './ActionFetch';\nimport { NamingPopUp } from '../../PopUp/NamingPopUp';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport Popup from '../../PopUp/PopUp';\nimport './../../theme.css';\nimport './../../irei_styles.css';\n\n/**\n * The ChooseListPage is used to choose an existing list of action \n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseListPage() {\n  _s();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\");\n  const [error, setError] = useState(false);\n  var [popUpNameActive, deactivatePopup] = useState(false);\n  var [name, setName] = useState(\"\");\n  const saveName = (p1, pName, p3) => {\n    setName(pName);\n  };\n  const errorState = () => {\n    setError(current => !current);\n  };\n  const [lists, setList] = useState([]);\n  GetActionListNames(setList);\n  const sentChoiceBack = name => {\n    SetActionList(errorState, name, setErrorMessage);\n  };\n  const buttons = lists.map(number => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/ActionListPage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n        onClick: () => sentChoiceBack(number),\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  });\n  const newList = kind => {\n    console.log(name);\n    CreatetActionList(name, kind, errorState, setErrorMessage);\n    navigate(\"/ActionListPage\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Action List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), buttons, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        deactivatePopup(true);\n      },\n      className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n      children: \"new actionlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NamingPopUp, {\n      active: popUpNameActive,\n      deactivate: () => {\n        deactivatePopup(false);\n      },\n      forErrors: errorState,\n      confirm: saveName,\n      getBaseName: key => {\n        return \"\";\n      },\n      errorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n      active: error,\n      deactivate: errorState,\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: name !== \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newList(\"parralel\");\n        },\n        children: \"parralel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newList(\"sequential\");\n        },\n        children: \"sequential\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ChooseListPage, \"b1E2FlFtdDqadRTzUJhA5/w4MoM=\", false, function () {\n  return [useNavigate];\n});\n_c = ChooseListPage;\nvar _c;\n$RefreshReg$(_c, \"ChooseListPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","TopBar","GetActionListNames","SetActionList","CreatetActionList","NamingPopUp","ErrorPopUp","Popup","ChooseListPage","navigate","errorMessage","setErrorMessage","error","setError","popUpNameActive","deactivatePopup","name","setName","saveName","p1","pName","p3","errorState","current","lists","setList","sentChoiceBack","buttons","map","number","newList","kind","console","log","key"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ChooseListPage.tsx"],"sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport { GetActionListNames, SetActionList, CreatetActionList } from './ActionFetch';\nimport { NamingPopUp } from '../../PopUp/NamingPopUp';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport Popup from '../../PopUp/PopUp';\nimport './../../theme.css'\nimport './../../irei_styles.css'\n\n/**\n * The ChooseListPage is used to choose an existing list of action \n */\nexport default function ChooseListPage () {\n    const navigate = useNavigate();\n    const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\")\n    const [error, setError] = useState(false)\n    var [popUpNameActive, deactivatePopup] = useState(false);\n    var [name, setName] = useState(\"\");\n\n    const saveName = (p1, pName, p3) => {\n        setName(pName)\n    }\n\n    const errorState = () => {\n        setError(current => !current)\n       }\n\n    const [lists, setList] = useState([]);\n    GetActionListNames(setList)\n\n    const sentChoiceBack = (name) => {\n        SetActionList(errorState, name, setErrorMessage); \n    }\n\n    const buttons = lists.map((number) => {\n        return <Link to = {\"/ActionListPage\"}>\n     <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" \n        onClick ={() => sentChoiceBack(number)}>\n        {number}\n     </button>\n     </Link>\n    })\n\n    const newList = ( kind) => {\n        console.log(name)\n        CreatetActionList(name, kind, errorState, setErrorMessage)\n        navigate(\"/ActionListPage\")\n    }\n\n    return (\n        <div>\n            <TopBar title=\"Choose Action List\"/>\n            {buttons}\n            <button onClick={()=>{deactivatePopup(true)}} className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\"> \n                new actionlist \n            </button>\n            <NamingPopUp active = {popUpNameActive} deactivate={()=>{deactivatePopup(false)}} forErrors={errorState}\n                        confirm={saveName} getBaseName={(key)=>{return \"\"}} errorMessage={setErrorMessage}/>\n            <ErrorPopUp active={error} deactivate={errorState} message={errorMessage}/>\n            <Popup trigger={(name !== \"\")}>\n                <button onClick = {()=>{newList(\"parralel\")}}>\n                    parralel\n                </button>\n                <button onClick = {()=>{newList(\"sequential\")}}>\n                    sequential\n                </button>\n            </Popup>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}