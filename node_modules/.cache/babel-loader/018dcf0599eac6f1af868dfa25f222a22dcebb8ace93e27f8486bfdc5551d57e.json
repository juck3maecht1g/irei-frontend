{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseDirectoryPage/ChooseDirectoryPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport DirectoryButton from './DirectoryButton';\nimport { GetDirectories, NavigateDown, NavigateUP, Create, BaseNameDir, confirmDirChoise } from '../../backendComunication/FetchAndSetDirExp';\nimport { NamingPopUp } from '../../PopUp/NamingPopUp';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport './../../theme.css';\nimport './../../irei_styles.css';\n\n/**\n * The ChooseDirectoryPage is used to navigate in a Datastructure\n * and choose a directory\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseDirectoryPage() {\n  _s();\n  var _directories$get;\n  const navigate = useNavigate();\n  const [directories, setDirectories] = useState(new Map());\n  const [errorMessage, setErrorMessage] = useState(\"sorry something went wrong\");\n  const [error, setError] = useState(false);\n  var [popUpName, setPopUpName] = useState(false);\n  GetDirectories(setDirectories);\n  const errorState = () => {\n    setError(current => !current);\n  };\n  const createDir = (action, name, setErrorMessage) => {\n    Create(action, name, setErrorMessage).then(res => {\n      if (res) {\n        navigate(\"/ChooseLaboratoryPage\");\n      }\n    });\n  };\n  const navUp = () => {\n    NavigateUP(errorState, setErrorMessage).then(res => {\n      if (res) {\n        window.location.reload();\n      }\n    });\n  };\n  const navDown = name => {\n    NavigateDown(errorState, name, setErrorMessage).then(res => {\n      if (res) {\n        window.location.reload();\n      }\n    });\n  };\n  const confirmChoise = () => {\n    confirmDirChoise(errorState, setErrorMessage).then(res => {\n      if (res) {\n        navigate(\"/ControlPage\");\n      }\n    });\n  };\n  const activatePopup = () => {\n    setPopUpName(current => !current);\n  };\n  const getPath = () => {\n    //TODO get-wcd\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid directory-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"irei-path\",\n          children: getPath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: (_directories$get = directories.get(\"to_navigate\")) === null || _directories$get === void 0 ? void 0 : _directories$get.map(number => {\n          return /*#__PURE__*/_jsxDEV(DirectoryButton, {\n            name: number,\n            action: navDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n            onClick: navUp,\n            children: \"navigate up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n            onClick: confirmChoise,\n            children: \"confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n            onClick: () => setPopUpName(true),\n            children: \"create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NamingPopUp, {\n          active: popUpName,\n          deactivate: activatePopup,\n          forErrors: errorState,\n          confirm: createDir,\n          getBaseName: BaseNameDir,\n          errorMessage: setErrorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n          active: error,\n          deactivate: errorState,\n          message: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(ChooseDirectoryPage, \"H5TZ5ngnvtK/l/EwgvsxzKVh75A=\", false, function () {\n  return [useNavigate];\n});\n_c = ChooseDirectoryPage;\nvar _c;\n$RefreshReg$(_c, \"ChooseDirectoryPage\");","map":{"version":3,"names":["React","useState","useNavigate","TopBar","DirectoryButton","GetDirectories","NavigateDown","NavigateUP","Create","BaseNameDir","confirmDirChoise","NamingPopUp","ErrorPopUp","ChooseDirectoryPage","navigate","directories","setDirectories","Map","errorMessage","setErrorMessage","error","setError","popUpName","setPopUpName","errorState","current","createDir","action","name","then","res","navUp","window","location","reload","navDown","confirmChoise","activatePopup","getPath","get","map","number"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseDirectoryPage/ChooseDirectoryPage.tsx"],"sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport DirectoryButton from './DirectoryButton';\nimport { GetDirectories, NavigateDown, NavigateUP, Create, BaseNameDir, confirmDirChoise } from '../../backendComunication/FetchAndSetDirExp';\nimport { NamingPopUp } from '../../PopUp/NamingPopUp';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport './../../theme.css'\nimport './../../irei_styles.css'\n\n/**\n * The ChooseDirectoryPage is used to navigate in a Datastructure\n * and choose a directory\n */\nexport default function ChooseDirectoryPage () {\n    const navigate = useNavigate();\n    const [directories, setDirectories] = useState(new Map<String,[]>());\n    const [errorMessage, setErrorMessage] = useState(\"sorry something went wrong\")\n    const [error, setError] = useState(false)\n    var [popUpName, setPopUpName] = useState(false);\n    GetDirectories(setDirectories);\n\n    const errorState = () => {\n        setError(current => !current)\n       }\n\n    const createDir = (action, name, setErrorMessage) => {\n          Create(action, name, setErrorMessage).then(res => {\n            if(res) {\n                navigate(\"/ChooseLaboratoryPage\")\n            }\n        }\n        )\n    }\n\n    const navUp = () => {\n        NavigateUP(errorState,setErrorMessage).then(res => {\n            if(res) {\n            window.location.reload()\n            }\n        })\n    }\n\n    const navDown = (name) => {\n        NavigateDown( errorState, name, setErrorMessage).then(res => {\n            if(res) {\n            window.location.reload()\n            }\n        })\n    }\n    \n    const confirmChoise = () => {\n        confirmDirChoise(errorState, setErrorMessage).then(res => {\n            if(res) {\n                navigate(\"/ControlPage\")\n            }\n        }\n        )\n    }\n\n\n    const activatePopup = () => {\n        setPopUpName(current => !current)\n    }\n\n\n    const getPath = () => {\n        //TODO get-wcd\n        return \n    }\n       \n\n    return ( \n        <div>\n            <TopBar title=\"Choose Directory\"></TopBar>\n            <div className=\"grid directory-grid\">\n                <div>\n                    <p className=\"irei-path\">\n                        {getPath}\n                    </p>\n                </div>\n\n                <div className=\"grid\">\n                    {\n                        directories.get(\"to_navigate\")?.map((number) => {\n                        return <DirectoryButton name={number} action={navDown}/>\n                        })\n                    }\n                </div>\n\n                <div className=\"flexbox\">\n                    <div>\n                        <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\"\n                        onClick = {navUp}>\n                            navigate up\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" onClick={confirmChoise}>\n                            confirm\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\"\n                        onClick = {()=> setPopUpName(true)}>\n                            create\n                        </button>\n                    </div>\n                    <NamingPopUp active = {popUpName} deactivate={activatePopup} forErrors={errorState}\n                        confirm={createDir} getBaseName={BaseNameDir} errorMessage={setErrorMessage}/>\n                    <ErrorPopUp active={error} deactivate={errorState} message={errorMessage}/>\n                    \n                </div>\n            </div>\n        </div>\n     );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}