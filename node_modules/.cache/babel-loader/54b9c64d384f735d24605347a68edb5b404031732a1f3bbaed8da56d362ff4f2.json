{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ActionListPage.tsx\";\nimport React from 'react';\nimport TopBar from '../../TopBar';\nimport ActionlistButton from './ActionlistButton';\nimport { Link } from 'react-router-dom';\n\n/**\n * The ActionListPage is used to edit a list of actions by adding new action and deleting others\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ActionListPage(props) {\n  //const [actionlist, setActionlist] = useState(new Map<string, []>());\n  //über Fetch set ActionList\n  const actionlist = test;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Actionlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), actionlist.map((currElement, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ActionlistButton, {\n          element: currElement\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/ActionKindPage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"new action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = ActionListPage;\nvar position = new Map();\nposition.set(\"name\", \"bett\");\nposition.set(\"coordinates\", new Map([[\"?????\", 234634]]));\nvar robot = new Map();\nrobot.set(\"name\", \"bot1\");\nrobot.set(\"ip\", 1);\nvar closeGripper = new Map();\ncloseGripper.set(\"key\", \"close_gripper\");\ncloseGripper.set(\"robots\", [robot]);\nvar openGripper = new Map();\nopenGripper.set(\"key\", \"open_gripper\");\nopenGripper.set(\"robots\", [robot]);\nvar custom = new Map();\ncustom.set(\"key\", \"custom\");\ncustom.set(\"robots\", [robot]);\ncustom.set(\"action\", \"tischtennis\");\nvar wait = new Map();\nwait.set(\"key\", \"wait\");\nwait.set(\"robots\", [robot]);\nwait.set(\"time\", 1235);\nvar move = new Map();\nmove.set(\"key\", \"move\");\nmove.set(\"robots\", [robot]);\nmove.set(\"position\", position);\nvar sList = new Map();\nsList.set(\"key\", \"sequential_list\");\nsList.set(\"name\", \"kochen\");\nsList.set(\"content\", [closeGripper, openGripper]);\nvar pList = new Map();\npList.set(\"key\", \"parallel_list\");\npList.set(\"name\", \"backen\");\npList.set(\"content\", [closeGripper, openGripper]);\nvar test = [closeGripper];\ntest.push(openGripper);\ntest.push(custom);\ntest.push(wait);\ntest.push(move);\ntest.push(sList);\ntest.push(pList);\nvar _c;\n$RefreshReg$(_c, \"ActionListPage\");","map":{"version":3,"names":["React","TopBar","ActionlistButton","Link","ActionListPage","props","actionlist","test","map","currElement","index","position","Map","set","robot","closeGripper","openGripper","custom","wait","move","sList","pList","push"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ActionListPage.tsx"],"sourcesContent":["import React from 'react';\nimport TopBar from '../../TopBar';\nimport ActionlistButton from './ActionlistButton';\nimport { Link } from 'react-router-dom';\n\n/**\n * The ActionListPage is used to edit a list of actions by adding new action and deleting others\n */\nexport default function ActionListPage (props) {\n\n\n    //const [actionlist, setActionlist] = useState(new Map<string, []>());\n    //über Fetch set ActionList\n    const actionlist = test;\n    return ( \n        <div>\n            <TopBar title=\"Actionlist\"></TopBar>\n            {\n                actionlist.map((currElement, index) => {\n                    return <div>\n                        <ActionlistButton key={index} element={currElement} />\n                    </div>\n                })\n            }\n            <Link to = {\"/ActionKindPage\"}>\n                <button>new action</button>\n            </Link>\n        </div>\n     );\n}\n\n\nvar position = new Map()\n    position.set(\"name\", \"bett\")\n     position.set(\"coordinates\", new Map([[\"?????\", 234634]]))\nvar robot = new Map ()\n    robot.set(\"name\", \"bot1\")\n     robot.set(\"ip\", 1)\nvar closeGripper = new Map()\n    closeGripper.set(\"key\", \"close_gripper\")\n     closeGripper.set(\"robots\", [robot])\nvar openGripper = new Map()\n    openGripper.set(\"key\", \"open_gripper\")\n     openGripper.set(\"robots\", [robot])   \nvar custom = new Map()\n    custom.set(\"key\", \"custom\"); custom.set(\"robots\", [robot])\n    custom.set(\"action\", \"tischtennis\")\nvar wait = new Map()\n \n    wait.set(\"key\", \"wait\"); wait.set(\"robots\", [robot]); wait.set(\"time\", 1235)\nvar move = new Map()\n    move.set(\"key\", \"move\"); move.set(\"robots\", [robot]); move.set(\"position\", position)\nvar sList = new Map()\n    sList.set(\"key\", \"sequential_list\");sList.set(\"name\", \"kochen\"); sList.set(\"content\", [closeGripper, openGripper])\nvar pList = new Map()\n    pList.set(\"key\", \"parallel_list\"); pList.set(\"name\", \"backen\"); pList.set(\"content\", [closeGripper, openGripper])\nvar test = [closeGripper]\n    test.push(openGripper); test.push(custom); test.push(wait); test.push(move); test.push(sList); test.push(pList)\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}