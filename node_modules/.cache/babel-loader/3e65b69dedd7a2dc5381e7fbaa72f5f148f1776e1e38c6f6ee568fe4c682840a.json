{"ast":null,"code":"var _jsxFileName = \"/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseExperimentRegister.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GetExperiments, SetExperiment } from '../../backendComunication/FetchAndSetDirExp';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport TopBar from '../../TopBar';\nimport '../Choose.css';\nimport './../../theme.css';\nimport './../../irei_styles.css';\n\n/**\n * The ChooseExperimentRegister is used to choose \n * the experiment class the user wants to execute\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseExperimentRegister() {\n  _s();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(\"sorry something went wrong\");\n  const [error, setError] = useState(false);\n  const [exp, setExperiment] = useState([]);\n  GetExperiments(setExperiment);\n  const errorState = () => {\n    setError(current => !current);\n  };\n  const setExp = name => {\n    SetExperiment(errorState, name, setErrorMessage).then(res => {\n      if (res) {\n        navigate(\"/Controlpage\");\n      }\n    });\n  };\n  const buttons = exp.map(number => {\n    return /*#__PURE__*/_jsxDEV(ChooseRegisterButton, {\n      name: number,\n      action: setExp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Experiment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), buttons, /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n      active: error,\n      deactivate: errorState,\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n/**\n * The ChooseRegisterButton is used to choose \n * the Esperiment out of the register which is displayed by this Button\n */\n_s(ChooseExperimentRegister, \"XUE4g91ZO3Fp9v8AlBWqzFbNzEA=\", false, function () {\n  return [useNavigate];\n});\n_c = ChooseExperimentRegister;\nfunction ChooseRegisterButton(props) {\n  const setChoise = () => {\n    props.action(props.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: setChoise,\n    className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n/*\nfunction SaveChoice () {\n    //sent to Backend\n}\n*/\n_c2 = ChooseRegisterButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChooseExperimentRegister\");\n$RefreshReg$(_c2, \"ChooseRegisterButton\");","map":{"version":3,"names":["React","useState","useNavigate","GetExperiments","SetExperiment","ErrorPopUp","TopBar","ChooseExperimentRegister","navigate","errorMessage","setErrorMessage","error","setError","exp","setExperiment","errorState","current","setExp","name","then","res","buttons","map","number","ChooseRegisterButton","props","setChoise","action"],"sources":["/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseExperimentRegister.tsx"],"sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { GetExperiments, SetExperiment } from '../../backendComunication/FetchAndSetDirExp';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport TopBar from '../../TopBar';\nimport '../Choose.css';\nimport './../../theme.css'\nimport './../../irei_styles.css'\n\n/**\n * The ChooseExperimentRegister is used to choose \n * the experiment class the user wants to execute\n */\nexport default function ChooseExperimentRegister() {\n    const navigate = useNavigate();\n    const [errorMessage, setErrorMessage] = useState(\"sorry something went wrong\")\n    const [error, setError] = useState(false)\n    const [exp, setExperiment] = useState([]);\n    GetExperiments(setExperiment);\n\n    const errorState = () => {\n        setError(current => !current)\n       }\n       const setExp = (name) => {\n            SetExperiment(errorState,name, setErrorMessage ).then(res => {\n                if(res) {\n                    navigate(\"/Controlpage\")\n                }\n            }\n            )\n       }\n\n\n    const buttons = exp.map((number) => {\n        return <ChooseRegisterButton name={number} action= {setExp}/>\n    })\n\n    return (\n        <div>\n            <TopBar title=\"Choose Experiment\"></TopBar>\n            {buttons}\n            <ErrorPopUp active={error} deactivate={errorState} message={errorMessage}/>\n        </div>\n    )\n}\n\n/**\n * The ChooseRegisterButton is used to choose \n * the Esperiment out of the register which is displayed by this Button\n */\n\nfunction ChooseRegisterButton (props) {\n    const setChoise = () => {\n        props.action(props.name) \n    }\n    return ( \n       \n        <button onClick={setChoise} \n        className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\">\n            {props.name}\n        </button>\n    \n     );\n}\n\n/*\nfunction SaveChoice () {\n    //sent to Backend\n}\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAeC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,cAAc,EAAEC,aAAa,QAAQ,6CAA6C;AAC3F,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,eAAe;AACtB,OAAO,mBAAmB;AAC1B,OAAO,yBAAyB;;AAEhC;AACA;AACA;AACA;AAHA;AAIA,eAAe,SAASC,wBAAwB,GAAG;EAAA;EAC/C,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,4BAA4B,CAAC;EAC9E,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACY,GAAG,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACzCE,cAAc,CAACW,aAAa,CAAC;EAE7B,MAAMC,UAAU,GAAG,MAAM;IACrBH,QAAQ,CAACI,OAAO,IAAI,CAACA,OAAO,CAAC;EAC9B,CAAC;EACD,MAAMC,MAAM,GAAIC,IAAI,IAAK;IACpBd,aAAa,CAACW,UAAU,EAACG,IAAI,EAAER,eAAe,CAAE,CAACS,IAAI,CAACC,GAAG,IAAI;MACzD,IAAGA,GAAG,EAAE;QACJZ,QAAQ,CAAC,cAAc,CAAC;MAC5B;IACJ,CAAC,CACA;EACN,CAAC;EAGJ,MAAMa,OAAO,GAAGR,GAAG,CAACS,GAAG,CAAEC,MAAM,IAAK;IAChC,oBAAO,QAAC,oBAAoB;MAAC,IAAI,EAAEA,MAAO;MAAC,MAAM,EAAGN;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EACjE,CAAC,CAAC;EAEF,oBACI;IAAA,wBACI,QAAC,MAAM;MAAC,KAAK,EAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAU,EAC1CI,OAAO,eACR,QAAC,UAAU;MAAC,MAAM,EAAEV,KAAM;MAAC,UAAU,EAAEI,UAAW;MAAC,OAAO,EAAEN;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACzE;AAEd;;AAEA;AACA;AACA;AACA;AAHA,GAjCwBF,wBAAwB;EAAA,QAC3BL,WAAW;AAAA;AAAA,KADRK,wBAAwB;AAsChD,SAASiB,oBAAoB,CAAEC,KAAK,EAAE;EAClC,MAAMC,SAAS,GAAG,MAAM;IACpBD,KAAK,CAACE,MAAM,CAACF,KAAK,CAACP,IAAI,CAAC;EAC5B,CAAC;EACD,oBAEI;IAAQ,OAAO,EAAEQ,SAAU;IAC3B,SAAS,EAAC,iGAAiG;IAAA,UACtGD,KAAK,CAACP;EAAI;IAAA;IAAA;IAAA;EAAA,QACN;AAGjB;;AAEA;AACA;AACA;AACA;AACA;AAJA,MAdSM,oBAAoB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}