{"ast":null,"code":"var _jsxFileName = \"/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseLaboratoryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchAdress = \"http://127.0.0.1:5000/test\";\nconst Massage = \"\";\n/**\n * The ChooseLaboratoryPage is used to choose \n * the Laboratory the user wants to work in\n */\nexport function ChooseLaboratoryPage() {\n  _s();\n  const [labs, setLabs] = useState(new Map());\n  let labMap = new Map();\n  getLabs(setLabs);\n  for (var key of labs.keys()) {\n    console.log(labs.get(key));\n  }\n  console.log(labs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(ChooseLaboratoryPage, \"0W6nrWUVs8cnsqFrHtaq5UN+H7E=\");\n_c = ChooseLaboratoryPage;\nexport default ChooseLaboratoryPage;\nasync function getLabs(setLabs) {\n  const data = await (await fetch(fetchAdress)).json();\n  console.log(data.keys);\n  for (var key in data.keys) {\n    setLabs(data);\n  }\n\n  // set state when the data received\n}\nvar _c;\n$RefreshReg$(_c, \"ChooseLaboratoryPage\");","map":{"version":3,"names":["React","useState","fetchAdress","Massage","ChooseLaboratoryPage","labs","setLabs","Map","labMap","getLabs","key","keys","console","log","get","data","fetch","json"],"sources":["/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseLaboratoryPage.tsx"],"sourcesContent":["import { data } from 'browserslist'\nimport React, { useEffect, useState } from 'react'\nconst fetchAdress = \"http://127.0.0.1:5000/test\"\nconst Massage = \"\"\n\ntype lab = {\n  name: string;\n  robots: string[];\n}\n\n/**\n * The ChooseLaboratoryPage is used to choose \n * the Laboratory the user wants to work in\n */\nexport function ChooseLaboratoryPage() {\n    const [labs, setLabs] = useState(new Map());\n    let labMap = new Map<string, string[]>();\n\n    getLabs(setLabs)\n    for (var key of labs.keys()) {\n      console.log(labs.get(key))\n    }\n    console.log(labs)\n    return ( \n      \n      <div>\n      </div>\n    );\n\n    \n    \n\n    \n}\nexport default ChooseLaboratoryPage;\n\n\n\n\nasync function getLabs(setLabs){\n    const data = await (\n      await fetch(\n        fetchAdress\n      )\n    ).json();\n    console.log(data.keys)\n    for(var key in data.keys)  {\n      setLabs(data)\n    }\n  \n        // set state when the data received\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAA;AAClD,MAAMC,WAAW,GAAG,4BAA4B;AAChD,MAAMC,OAAO,GAAG,EAAE;AAOlB;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoB,GAAG;EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAIM,GAAG,EAAE,CAAC;EAC3C,IAAIC,MAAM,GAAG,IAAID,GAAG,EAAoB;EAExCE,OAAO,CAACH,OAAO,CAAC;EAChB,KAAK,IAAII,GAAG,IAAIL,IAAI,CAACM,IAAI,EAAE,EAAE;IAC3BC,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,GAAG,CAACJ,GAAG,CAAC,CAAC;EAC5B;EACAE,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACjB,oBAEE;IAAA;IAAA;IAAA;EAAA,QACM;AAOZ;AAAC,GAnBeD,oBAAoB;AAAA,KAApBA,oBAAoB;AAoBpC,eAAeA,oBAAoB;AAKnC,eAAeK,OAAO,CAACH,OAAO,EAAC;EAC3B,MAAMS,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACTd,WAAW,CACZ,EACDe,IAAI,EAAE;EACRL,OAAO,CAACC,GAAG,CAACE,IAAI,CAACJ,IAAI,CAAC;EACtB,KAAI,IAAID,GAAG,IAAIK,IAAI,CAACJ,IAAI,EAAG;IACzBL,OAAO,CAACS,IAAI,CAAC;EACf;;EAEI;AACR;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}