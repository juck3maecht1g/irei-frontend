{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { post, passDataAsMap, passDataDirect } from \"./BasicOpperations\";\nconst fetchAdressGetExperiments = \"http://127.0.0.1:5000/api/getRegExp\";\nconst postAdressChosenExperiment = \"http://127.0.0.1:5000/api/setup_exp\";\nconst fetchAdressGetDirectories = \"http://127.0.0.1:5000/api/get_content\";\nconst postAdressNavigateUP = \"http://127.0.0.1:5000/api/navigate_up\";\nconst postAdressNavigateDown = \"http://127.0.0.1:5000/api/navigate_down\";\nconst postAdressCreateDirectory = \"http://127.0.0.1:5000/api/create_dirctory\";\nconst postAdressDeleteDirectory = \"http://127.0.0.1:5000/api/delete_dirctory\";\nconst postAdressConfirmDirChoisey = \"http://127.0.0.1:5000/api/confirm_dir_coise\";\nconst fetchAdressName = \"http://127.0.0.1:5000/api/get_base_name_dir\";\n\n// contains dummy\n\n/** gets names of all registered experiments as array\n * \n */\nexport async function GetExperiments(setExperiments) {\n  _s();\n  var [fetched, setfetched] = useState(false);\n  passDataDirect(setExperiments, fetched, setfetched, fetchAdressGetExperiments);\n}\n_s(GetExperiments, \"oYvWj/HcRx72yjWu3UMoZWDRi1E=\");\n_c = GetExperiments;\nexport async function SetExperiment(action, name, setErrorMessage) {\n  var message = new Map();\n  message.set(\"marker\", \"SetExperiment\");\n  message.set(\"experiment\", name);\n  console.log(message);\n  const result = Object.fromEntries(message);\n  post(result, postAdressChosenExperiment).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n    }\n  });\n}\n\n// contains dummy\n\n/** gets a dictionary with two entrys\n * \"to_navigate\" all child experiments\n * \"cant_navigate\" all other files in directory\n * @param setDirectories \n */\n_c2 = SetExperiment;\nexport async function GetDirectories(setDirectories) {\n  _s2();\n  var [fetched, setfetched] = useState(false);\n  passDataAsMap(setDirectories, fetched, setfetched, fetchAdressGetDirectories);\n}\n_s2(GetDirectories, \"oYvWj/HcRx72yjWu3UMoZWDRi1E=\");\n_c3 = GetDirectories;\nconst markerNavUP = \"navigate_up\";\nexport async function NavigateUP(action, setErrorMessage) {\n  var message = new Map();\n  var reload = false;\n  message.set(\"marker\", markerNavUP);\n  const result = Object.fromEntries(message);\n  await post(result, postAdressNavigateUP).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c4 = NavigateUP;\nconst markerNavDown = \"navigate_down\";\nexport async function NavigateDown(action, name, setErrorMessage) {\n  var message = new Map();\n  message.set(\"marker\", markerNavDown);\n  message.set(\"dir\", name);\n  var reload = false;\n  const result = Object.fromEntries(message);\n  await post(result, postAdressNavigateDown).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c5 = NavigateDown;\nconst markerCreate = \"crerate\";\nexport async function Create(action, name, setErrorMessage) {\n  var message = new Map();\n  message.set(\"marker\", markerCreate);\n  message.set(\"name\", name);\n  const result = Object.fromEntries(message);\n  var reload = false;\n  await post(result, postAdressCreateDirectory).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c6 = Create;\nconst markerDeleteDirectory = \"delete_directory\";\nexport async function DeleteDirectory(action, name, setErrorMessage) {\n  var message = new Map();\n  message.set(\"marker\", markerDeleteDirectory);\n  message.set(\"name\", name);\n  const result = Object.fromEntries(message);\n  var reload = false;\n  await post(result, postAdressDeleteDirectory).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c7 = DeleteDirectory;\nexport function BaseNameDir(setName) {\n  _s3();\n  var [fetched, setFetched] = useState(false);\n  passDataDirect(setName, fetched, setFetched, fetchAdressName);\n}\n_s3(BaseNameDir, \"LI9qBy+DzVL07R+wkbBqs6z5zb0=\");\n_c8 = BaseNameDir;\nconst confirmMarker = \"confirm_dir_coise\";\nexport async function confirmDirChoise(action, setErrorMessage) {\n  var reload = false;\n  await post(confirmMarker, postAdressConfirmDirChoisey).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"GetExperiments\");\n$RefreshReg$(_c2, \"SetExperiment\");\n$RefreshReg$(_c3, \"GetDirectories\");\n$RefreshReg$(_c4, \"NavigateUP\");\n$RefreshReg$(_c5, \"NavigateDown\");\n$RefreshReg$(_c6, \"Create\");\n$RefreshReg$(_c7, \"DeleteDirectory\");\n$RefreshReg$(_c8, \"BaseNameDir\");","map":{"version":3,"names":["useState","post","passDataAsMap","passDataDirect","fetchAdressGetExperiments","postAdressChosenExperiment","fetchAdressGetDirectories","postAdressNavigateUP","postAdressNavigateDown","postAdressCreateDirectory","postAdressDeleteDirectory","postAdressConfirmDirChoisey","fetchAdressName","GetExperiments","setExperiments","fetched","setfetched","SetExperiment","action","name","setErrorMessage","message","Map","set","console","log","result","Object","fromEntries","then","res","GetDirectories","setDirectories","markerNavUP","NavigateUP","reload","markerNavDown","NavigateDown","markerCreate","Create","markerDeleteDirectory","DeleteDirectory","BaseNameDir","setName","setFetched","confirmMarker","confirmDirChoise"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/backendComunication/FetchAndSetDirExp.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { post, passDataAsMap, passDataDirect } from \"./BasicOpperations\"\nconst fetchAdressGetExperiments = \"http://127.0.0.1:5000/api/getRegExp\"\nconst postAdressChosenExperiment = \"http://127.0.0.1:5000/api/setup_exp\"\nconst fetchAdressGetDirectories = \"http://127.0.0.1:5000/api/get_content\"\nconst postAdressNavigateUP = \"http://127.0.0.1:5000/api/navigate_up\"\nconst postAdressNavigateDown = \"http://127.0.0.1:5000/api/navigate_down\"\nconst postAdressCreateDirectory = \"http://127.0.0.1:5000/api/create_dirctory\"\nconst postAdressDeleteDirectory = \"http://127.0.0.1:5000/api/delete_dirctory\"\nconst postAdressConfirmDirChoisey = \"http://127.0.0.1:5000/api/confirm_dir_coise\"\nconst fetchAdressName = \"http://127.0.0.1:5000/api/get_base_name_dir\"\n\n// contains dummy\n\n/** gets names of all registered experiments as array\n * \n */\nexport async function GetExperiments(setExperiments){\n    var [fetched, setfetched] = useState(false) \n    passDataDirect(setExperiments, fetched, setfetched, fetchAdressGetExperiments)\n\n\n}\n\nexport async function SetExperiment(action, name, setErrorMessage){\n    var message =  new Map()\n    message.set(\"marker\", \"SetExperiment\")\n    message.set(\"experiment\", name)\n    console.log(message)\n    const result = Object.fromEntries(message)\n    post(result, postAdressChosenExperiment).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n        }\n})\n\n}\n\n// contains dummy\n\n/** gets a dictionary with two entrys\n * \"to_navigate\" all child experiments\n * \"cant_navigate\" all other files in directory\n * @param setDirectories \n */\nexport async function GetDirectories(setDirectories){\n    var [fetched, setfetched] = useState(false) \n   passDataAsMap(setDirectories, fetched, setfetched, fetchAdressGetDirectories)\n    \n\n    \n}\n\n\n\nconst markerNavUP = \"navigate_up\"\nexport async function NavigateUP(action,setErrorMessage){\n    var message =  new Map()\n    var reload = false\n    message.set(\"marker\", markerNavUP)\n    const result = Object.fromEntries(message)\n    await post(result, postAdressNavigateUP).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n           reload = false\n        } else {\n\n       reload = true}\n    })\n\n    return reload\n\n\n}\nconst markerNavDown = \"navigate_down\"\nexport async function NavigateDown(action, name, setErrorMessage){\n    var message =  new Map()\n   \n    message.set(\"marker\", markerNavDown)\n    message.set(\"dir\", name)\n     var reload = false\n    const result = Object.fromEntries(message)\n    await post(result, postAdressNavigateDown).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n}\n\nconst markerCreate = \"crerate\"\nexport async function Create(action, name, setErrorMessage){\n    var message =  new Map()\n    message.set(\"marker\", markerCreate)\n    message.set(\"name\", name)\n    const result = Object.fromEntries(message)\n    var reload = false\n    await post(result, postAdressCreateDirectory).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n}\nconst markerDeleteDirectory = \"delete_directory\"\nexport async function DeleteDirectory(action, name, setErrorMessage){\n    var message =  new Map()\n    message.set(\"marker\", markerDeleteDirectory)\n    message.set(\"name\", name)\n    const result = Object.fromEntries(message)\n    var reload = false\n    await post(result, postAdressDeleteDirectory).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n}\n\nexport function BaseNameDir(setName) {\n    var [fetched, setFetched] = useState(false) \n    passDataDirect(setName, fetched, setFetched, fetchAdressName)\n}\n\nconst confirmMarker = \"confirm_dir_coise\"\nexport async function confirmDirChoise(action,setErrorMessage) {\n    var reload = false\n    await post(confirmMarker, postAdressConfirmDirChoisey).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}