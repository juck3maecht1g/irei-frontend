{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/PSE/neustes Frontend/irei-frontend/src/choosePages/chooseRobotPage/ChooseRobotPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChooseRobotPage(props) {\n  _s();\n  const location = useLocation();\n  const {\n    kind\n  } = location.state;\n  var [robots, setRobots] = useState(new Map());\n  props.fetch(setRobots);\n  const arrRobots = Array.from(robots, function (entry) {\n    return {\n      key: entry[0],\n      value: entry[1]\n    };\n  });\n  const buttons = arrRobots.map(number => {\n    return /*#__PURE__*/_jsxDEV(RobotButton, {\n      name: number.value,\n      action: kind\n    }, number.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\n_s(ChooseRobotPage, \"m4SaZF2MBbB3ISJs1+Hcq/qqn2w=\", false, function () {\n  return [useLocation];\n});\n_c = ChooseRobotPage;\nfunction RobotButton(props) {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/ChooseExperimentRobots\",\n    state: {\n      ip: props.key,\n      kind: props.action\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_c2 = RobotButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChooseRobotPage\");\n$RefreshReg$(_c2, \"RobotButton\");","map":{"version":3,"names":["React","useState","Link","useLocation","ChooseRobotPage","props","location","kind","state","robots","setRobots","Map","fetch","arrRobots","Array","from","entry","key","value","buttons","map","number","RobotButton","ip","action","name"],"sources":["/Users/justushund/Documents/PSE/neustes Frontend/irei-frontend/src/choosePages/chooseRobotPage/ChooseRobotPage.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nexport default function ChooseRobotPage(props){\n\n  const location = useLocation();\n  const { kind } = location.state;\n\n    var [robots, setRobots] = useState(new Map<string, string>());\n    props.fetch(setRobots)\n\n    const arrRobots = Array.from(robots, function (entry) {\n      return { key: entry[0], value: entry[1]};\n    });\n\n    const buttons = arrRobots.map((number) => {\n      return <RobotButton key={number.key} name= {number.value} action={kind}/>\n    })\n\n    return (<></>)\n}\n\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\nfunction RobotButton (props) {\n\n  return ( \n      <Link\n         to = {\"/ChooseExperimentRobots\"}\n         state = {{ip: props.key, kind: props.action}}\n      >\n      <button className=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\">\n          {props.name}\n      </button>\n      </Link>\n   );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AAHA;AAAA;AAIA,eAAe,SAASC,eAAe,CAACC,KAAK,EAAC;EAAA;EAE5C,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM;IAAEI;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAE7B,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAIU,GAAG,EAAkB,CAAC;EAC7DN,KAAK,CAACO,KAAK,CAACF,SAAS,CAAC;EAEtB,MAAMG,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACN,MAAM,EAAE,UAAUO,KAAK,EAAE;IACpD,OAAO;MAAEC,GAAG,EAAED,KAAK,CAAC,CAAC,CAAC;MAAEE,KAAK,EAAEF,KAAK,CAAC,CAAC;IAAC,CAAC;EAC1C,CAAC,CAAC;EAEF,MAAMG,OAAO,GAAGN,SAAS,CAACO,GAAG,CAAEC,MAAM,IAAK;IACxC,oBAAO,QAAC,WAAW;MAAkB,IAAI,EAAGA,MAAM,CAACH,KAAM;MAAC,MAAM,EAAEX;IAAK,GAA9Cc,MAAM,CAACJ,GAAG;MAAA;MAAA;MAAA;IAAA,QAAsC;EAC3E,CAAC,CAAC;EAEF,oBAAQ,qCAAK;AACjB;;AAGA;AACA;AACA;AACA;AAHA,GApBwBb,eAAe;EAAA,QAEpBD,WAAW;AAAA;AAAA,KAFNC,eAAe;AAwBvC,SAASkB,WAAW,CAAEjB,KAAK,EAAE;EAE3B,oBACI,QAAC,IAAI;IACF,EAAE,EAAI,yBAA0B;IAChC,KAAK,EAAI;MAACkB,EAAE,EAAElB,KAAK,CAACY,GAAG;MAAEV,IAAI,EAAEF,KAAK,CAACmB;IAAM,CAAE;IAAA,uBAEhD;MAAQ,SAAS,EAAC,qFAAqF;MAAA,UAClGnB,KAAK,CAACoB;IAAI;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACF;AAEb;AAAC,MAZQH,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}