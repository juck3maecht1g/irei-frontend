{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseRobotPage/ChooseRobotsForMapping.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../theme';\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseRobotsForMappingPage(props) {\n  _s();\n  var [robots, setRobots] = useState(help);\n  //GetExpRobots(setRobots)\n\n  const arrRobots = Array.from(robots, function (entry) {\n    return {\n      key: entry[0],\n      value: entry[1]\n    };\n  });\n  const handleClick = ip => {\n    props.execute(ip, props.number);\n  };\n  const buttons = arrRobots.map(number => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RobotButton, {\n        data_key: number.key,\n        name: number.value,\n        execute: handleClick\n      }, number.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: buttons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\n_s(ChooseRobotsForMappingPage, \"7MgMWj9gAhmBiXnWVx3dtJLUZJE=\");\n_c = ChooseRobotsForMappingPage;\nfunction RobotButton(props) {\n  return (\n    /*#__PURE__*/\n    // noch zurückschicken wenn Gripper\n    _jsxDEV(\"button\", {\n      onClick: () => props.execute(props.data_key),\n      className: \"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.data_key, \" \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this)\n  );\n}\n_c2 = RobotButton;\nconst help = new Map();\nhelp.set(\"123.123.234\", \"julie\");\nhelp.set(\"673.986.638\", \"maja\");\nhelp.set(\"894.234.467\", \"dominik\");\nhelp.set(\"235.474.458\", \"niclas\");\nhelp.set(\"777.345.658\", \"jule\");\nhelp.set(\"346.346.476\", \"andre\");\nvar _c, _c2;\n$RefreshReg$(_c, \"ChooseRobotsForMappingPage\");\n$RefreshReg$(_c2, \"RobotButton\");","map":{"version":3,"names":["React","useState","ChooseRobotsForMappingPage","props","robots","setRobots","help","arrRobots","Array","from","entry","key","value","handleClick","ip","execute","number","buttons","map","RobotButton","data_key","name","Map","set"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseRobotPage/ChooseRobotsForMapping.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, } from 'react-router-dom';\nimport { GetExpRobots } from '../../backendComunication/FetchRobots';\nimport '../../theme'\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nexport default function ChooseRobotsForMappingPage(props){\n\n    var [robots, setRobots] = useState(help);\n    //GetExpRobots(setRobots)\n\n    const arrRobots = Array.from(robots, function (entry) {\n      return { key: entry[0], value: entry[1]};\n    });\n\n    const handleClick = (ip) => {\n        props.execute( ip,props.number)\n    }\n\n    const buttons = arrRobots.map((number) => {\n      return <div>\n        <RobotButton key={number.key}\n      data_key= {number.key} \n      name= {number.value} \n      execute = {handleClick}/>\n      </div>\n    })\n\n    return (\n      <div>\n        {buttons}\n      </div>\n    )\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\nfunction RobotButton (props) {\n\n  return (   // noch zurückschicken wenn Gripper\n  <button onClick = {() => props.execute(props.data_key)}\n  className=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\">\n    <div>{props.data_key} {props.name}</div>\n  </button>\n   );\n}\n\nconst help = new Map();\nhelp.set(\"123.123.234\", \"julie\")\nhelp.set(\"673.986.638\", \"maja\")\nhelp.set(\"894.234.467\", \"dominik\")\nhelp.set(\"235.474.458\", \"niclas\")\nhelp.set(\"777.345.658\", \"jule\")\nhelp.set(\"346.346.476\", \"andre\")"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAO,aAAa;;AAEpB;AACA;AACA;AACA;AAHA;AAIA,eAAe,SAASC,0BAA0B,CAACC,KAAK,EAAC;EAAA;EAErD,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAACK,IAAI,CAAC;EACxC;;EAEA,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACL,MAAM,EAAE,UAAUM,KAAK,EAAE;IACpD,OAAO;MAAEC,GAAG,EAAED,KAAK,CAAC,CAAC,CAAC;MAAEE,KAAK,EAAEF,KAAK,CAAC,CAAC;IAAC,CAAC;EAC1C,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAIC,EAAE,IAAK;IACxBX,KAAK,CAACY,OAAO,CAAED,EAAE,EAACX,KAAK,CAACa,MAAM,CAAC;EACnC,CAAC;EAED,MAAMC,OAAO,GAAGV,SAAS,CAACW,GAAG,CAAEF,MAAM,IAAK;IACxC,oBAAO;MAAA,uBACL,QAAC,WAAW;QACd,QAAQ,EAAGA,MAAM,CAACL,GAAI;QACtB,IAAI,EAAGK,MAAM,CAACJ,KAAM;QACpB,OAAO,EAAIC;MAAY,GAHHG,MAAM,CAACL,GAAG;QAAA;QAAA;QAAA;MAAA;IAGL;MAAA;MAAA;MAAA;IAAA,QACnB;EACR,CAAC,CAAC;EAEF,oBACE;IAAA,UACGM;EAAO;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ;;AAEA;AACA;AACA;AACA;AAHA,GA7BwBf,0BAA0B;AAAA,KAA1BA,0BAA0B;AAiClD,SAASiB,WAAW,CAAEhB,KAAK,EAAE;EAE3B;IAAA;IAAW;IACX;MAAQ,OAAO,EAAI,MAAMA,KAAK,CAACY,OAAO,CAACZ,KAAK,CAACiB,QAAQ,CAAE;MACvD,SAAS,EAAC,qFAAqF;MAAA,uBAC7F;QAAA,WAAMjB,KAAK,CAACiB,QAAQ,OAAGjB,KAAK,CAACkB,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA;EACjC;AAEX;AAAC,MARQF,WAAW;AAUpB,MAAMb,IAAI,GAAG,IAAIgB,GAAG,EAAE;AACtBhB,IAAI,CAACiB,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAChCjB,IAAI,CAACiB,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;AAC/BjB,IAAI,CAACiB,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;AAClCjB,IAAI,CAACiB,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC;AACjCjB,IAAI,CAACiB,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;AAC/BjB,IAAI,CAACiB,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}