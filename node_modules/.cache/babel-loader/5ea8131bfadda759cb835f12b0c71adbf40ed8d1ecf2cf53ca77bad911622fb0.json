{"ast":null,"code":"var _jsxFileName = \"/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseLaboratoryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchAdress = \"http://127.0.0.1:5000/test\";\nconst Massage = \"\";\n/**\n * The ChooseLaboratoryPage is used to choose \n * the Laboratory the user wants to work in\n */\nexport function ChooseLaboratoryPage() {\n  _s();\n  var [labs, setLabs] = useState(new Map());\n  getLabs(setLabs);\n  console.log(labs.bernt);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n_s(ChooseLaboratoryPage, \"F0nKtKtRhU5hUnTtnZ2EHOErZFE=\");\n_c = ChooseLaboratoryPage;\nexport default ChooseLaboratoryPage;\nasync function getLabs(setLabs) {\n  const data = await (await fetch(fetchAdress)).json().then(data => {\n    for (let i = 0; i < data.length; i++) {\n      setLabs(data[i].name, data[i].robots);\n    }\n  });\n\n  // set state when the data received\n}\nvar _c;\n$RefreshReg$(_c, \"ChooseLaboratoryPage\");","map":{"version":3,"names":["React","useState","fetchAdress","Massage","ChooseLaboratoryPage","labs","setLabs","Map","getLabs","console","log","bernt","data","fetch","json","then","i","length","name","robots"],"sources":["/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseLaboratoryPage.tsx"],"sourcesContent":["import { data } from 'browserslist'\nimport React, { useEffect, useState } from 'react'\nconst fetchAdress = \"http://127.0.0.1:5000/test\"\nconst Massage = \"\"\n\ntype lab = {\n  name: string;\n  robots: string[];\n}\n\n/**\n * The ChooseLaboratoryPage is used to choose \n * the Laboratory the user wants to work in\n */\nexport function ChooseLaboratoryPage() {\n    var [labs, setLabs] = useState(new Map<string, string[]>());\n    \n    getLabs(setLabs)\n    console.log(labs.bernt)\n\n    return ( \n      \n      <div>\n        \n      </div>\n    );\n\n    \n    \n\n    \n}\nexport default ChooseLaboratoryPage;\n\n\n\n\nasync function getLabs(setLabs){\n    const data = await (\n      await fetch(\n        fetchAdress\n      )\n    ).json().then(data => {\n      for(let i = 0; i < data.length; i++) {\n        setLabs(data[i].name,data[i].robots)\n      }\n    }\n    )\n  \n        // set state when the data received\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAA;AAClD,MAAMC,WAAW,GAAG,4BAA4B;AAChD,MAAMC,OAAO,GAAG,EAAE;AAOlB;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoB,GAAG;EAAA;EACnC,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAIM,GAAG,EAAoB,CAAC;EAE3DC,OAAO,CAACF,OAAO,CAAC;EAChBG,OAAO,CAACC,GAAG,CAACL,IAAI,CAACM,KAAK,CAAC;EAEvB,oBAEE;IAAA;IAAA;IAAA;EAAA,QAEM;AAOZ;AAAC,GAjBeP,oBAAoB;AAAA,KAApBA,oBAAoB;AAkBpC,eAAeA,oBAAoB;AAKnC,eAAeI,OAAO,CAACF,OAAO,EAAC;EAC3B,MAAMM,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACTX,WAAW,CACZ,EACDY,IAAI,EAAE,CAACC,IAAI,CAACH,IAAI,IAAI;IACpB,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACnCV,OAAO,CAACM,IAAI,CAACI,CAAC,CAAC,CAACE,IAAI,EAACN,IAAI,CAACI,CAAC,CAAC,CAACG,MAAM,CAAC;IACtC;EACF,CAAC,CACA;;EAEG;AACR;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}