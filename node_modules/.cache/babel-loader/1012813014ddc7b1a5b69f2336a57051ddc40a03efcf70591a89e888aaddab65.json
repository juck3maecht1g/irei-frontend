{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ChooseListPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport { GetActionListNames, SetActionList } from './ActionFetch';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport './../../theme.css';\nimport './../../irei_styles.css';\n\n/**\n * The ChooseListPage is used to choose an existing list of action \n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseListPage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\");\n  const [error, setError] = useState(false);\n  const errorState = () => {\n    setError(current => !current);\n  };\n  const [lists, setList] = useState([]);\n  GetActionListNames(setList);\n  const sentChoiceBack = name => {\n    SetActionList(errorState, name, setErrorMessage);\n  };\n  const buttons = lists.map(number => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/ActionListPage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n        onClick: () => sentChoiceBack(number),\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Action List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), buttons, /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n      active: error,\n      deactivate: errorState,\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(ChooseListPage, \"T+6vRdSLWCqaPqCoQczxG6epRAA=\");\n_c = ChooseListPage;\nvar _c;\n$RefreshReg$(_c, \"ChooseListPage\");","map":{"version":3,"names":["React","useState","Link","TopBar","GetActionListNames","SetActionList","ErrorPopUp","ChooseListPage","errorMessage","setErrorMessage","error","setError","errorState","current","lists","setList","sentChoiceBack","name","buttons","map","number"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ChooseListPage.tsx"],"sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport { GetActionListNames, SetActionList } from './ActionFetch';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport './../../theme.css'\nimport './../../irei_styles.css'\n\n/**\n * The ChooseListPage is used to choose an existing list of action \n */\nexport default function ChooseListPage () {\n    const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\")\n    const [error, setError] = useState(false)\n    const errorState = () => {\n        setError(current => !current)\n       }\n\n    const [lists, setList] = useState([]);\n    GetActionListNames(setList)\n\n    const sentChoiceBack = (name) => {\n        SetActionList(errorState, name, setErrorMessage); \n    }\n\n    const buttons = lists.map((number) => {\n        return <Link to = {\"/ActionListPage\"}>\n     <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" \n        onClick ={() => sentChoiceBack(number)}>\n        {number}\n     </button>\n     </Link>\n    })\n\n    return (\n        <div>\n            <TopBar title=\"Choose Action List\"/>\n            {buttons}\n            <ErrorPopUp active={error} deactivate={errorState} message={errorMessage}/>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,IAAI,QAAqB,kBAAkB;AACpD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,kBAAkB,EAAEC,aAAa,QAAQ,eAAe;AACjE,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAO,mBAAmB;AAC1B,OAAO,yBAAyB;;AAEhC;AACA;AACA;AAFA;AAGA,eAAe,SAASC,cAAc,GAAI;EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,mCAAmC,CAAC;EACrF,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMW,UAAU,GAAG,MAAM;IACrBD,QAAQ,CAACE,OAAO,IAAI,CAACA,OAAO,CAAC;EAC9B,CAAC;EAEJ,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACrCG,kBAAkB,CAACW,OAAO,CAAC;EAE3B,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7BZ,aAAa,CAACO,UAAU,EAAEK,IAAI,EAAER,eAAe,CAAC;EACpD,CAAC;EAED,MAAMS,OAAO,GAAGJ,KAAK,CAACK,GAAG,CAAEC,MAAM,IAAK;IAClC,oBAAO,QAAC,IAAI;MAAC,EAAE,EAAI,iBAAkB;MAAA,uBACxC;QAAQ,SAAS,EAAC,iGAAiG;QAChH,OAAO,EAAG,MAAMJ,cAAc,CAACI,MAAM,CAAE;QAAA,UACtCA;MAAM;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QACF;EACR,CAAC,CAAC;EAEF,oBACI;IAAA,wBACI,QAAC,MAAM;MAAC,KAAK,EAAC;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,EACnCF,OAAO,eACR,QAAC,UAAU;MAAC,MAAM,EAAER,KAAM;MAAC,UAAU,EAAEE,UAAW;MAAC,OAAO,EAAEJ;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACzE;AAEd;AAAC,GA9BuBD,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}