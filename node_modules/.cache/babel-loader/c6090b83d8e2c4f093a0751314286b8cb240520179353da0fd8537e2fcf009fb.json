{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseRobotPage/ChooseRobotPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { GetExpRobots } from '../../backendComunication/FetchRobots';\nimport TopBar from '../../TopBar';\nimport { appendAction } from '../../controlPages/ActionPage/ActionFetch';\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChooseRobotPage(props) {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\");\n  const [error, setError] = useState(false);\n  const errorState = () => {\n    setError(current => !current);\n  };\n  const location = useLocation();\n  const {\n    action\n  } = location.state;\n  const {\n    link\n  } = location.state;\n  const sentToBackend = ip => {\n    if (link === \"/ActionListPage\") {\n      var help = new Map();\n      help.set(\"key\", action);\n      help.set(\"robot\", ip);\n      appendAction(errorState, help, setErrorMessage);\n    }\n  };\n  var [robots, setRobots] = useState(new Map());\n  GetExpRobots(setRobots);\n  const arrRobots = Array.from(robots, function (entry) {\n    return {\n      key: entry[0],\n      value: entry[1]\n    };\n  });\n  const buttons = arrRobots.map(number => {\n    return /*#__PURE__*/_jsxDEV(RobotButton, {\n      data_key: number.key,\n      name: number.value,\n      actionKind: action,\n      linkTo: link,\n      action: sentToBackend\n    }, number.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Robot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), buttons]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\n_s(ChooseRobotPage, \"8gy/bNXRjxI8McZjOv9BJmFLiZI=\", false, function () {\n  return [useLocation];\n});\n_c = ChooseRobotPage;\nfunction RobotButton(props) {\n  return (\n    /*#__PURE__*/\n    // noch zurückschicken wenn Gripper\n    _jsxDEV(Link, {\n      to: props.linkTo,\n      state: {\n        kind: props.actionKind,\n        ip: props.data_key\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.action(props.data_key),\n        className: \"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.data_key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = RobotButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChooseRobotPage\");\n$RefreshReg$(_c2, \"RobotButton\");","map":{"version":3,"names":["React","useState","Link","useLocation","GetExpRobots","TopBar","appendAction","ChooseRobotPage","props","errorMessage","setErrorMessage","error","setError","errorState","current","location","action","state","link","sentToBackend","ip","help","Map","set","robots","setRobots","arrRobots","Array","from","entry","key","value","buttons","map","number","RobotButton","linkTo","kind","actionKind","data_key","name"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseRobotPage/ChooseRobotPage.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { GetExpRobots } from '../../backendComunication/FetchRobots';\nimport TopBar from '../../TopBar';\nimport {appendAction} from '../../controlPages/ActionPage/ActionFetch';\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nexport default function ChooseRobotPage(props){\n  const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\")\n  const [error, setError] = useState(false)\n  const errorState = () => {\n      setError(current => !current)\n     }\n    const location = useLocation();\n    const {action} = location.state;\n    const {link} = location.state;\n\n    const sentToBackend = (ip) => {\n      if (link === \"/ActionListPage\") {\n        var help = new Map();\n        help.set(\"key\", action);\n        help.set(\"robot\", ip)\n        appendAction(errorState, help, setErrorMessage);\n      }\n    }\n\n    var [robots, setRobots] = useState(new Map<string, string>());\n    GetExpRobots(setRobots)\n\n    const arrRobots = Array.from(robots, function (entry) {\n      return { key: entry[0], value: entry[1]};\n    });\n\n    const buttons = arrRobots.map((number) => {\n      return <RobotButton key={number.key}\n      data_key= {number.key} \n      name= {number.value}\n      actionKind={action}\n      linkTo={link}\n      action = {sentToBackend}/>\n    })\n\n    return (\n      <div>\n        <TopBar title=\"Choose Robot\"/>\n        {buttons}\n      </div>\n    )\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\nfunction RobotButton (props) {\n\n  return (   // noch zurückschicken wenn Gripper\n    <Link to = {props.linkTo}\n          state = {{kind: props.actionKind, ip: props.data_key}}>\n        <button onClick = {() => props.action(props.data_key)}\n        className=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\">\n          <div>{props.name}</div>\n          <div>{props.data_key}</div>\n        </button>\n    </Link>\n   );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}