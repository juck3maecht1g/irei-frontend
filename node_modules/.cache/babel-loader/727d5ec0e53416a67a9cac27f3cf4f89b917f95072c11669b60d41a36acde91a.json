{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ActionlistButton.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\n * The ActionListPage is used to edit a list of actions by adding new action and deleting others\n */\nexport default function ActionlistButton(props) {\n  _s();\n  const action = props.element;\n  const [state, setState] = useState(false);\n  const createButtons = () => {\n    console.log(action.get(\"content\"));\n    if (action.get(\"content\") !== undefined) {\n      return action.get(\"content\").map((currElement, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ActionlistButton, {\n            element: currElement\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this);\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n  const open = createButtons();\n  if (action.get(\"key\") === \"sequential_list\") {\n    // kennung so oder anders\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setState(prevState => !prevState),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: action.get(\"name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"equential_list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), state && open]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  } else if (action.get(\"key\") === \"parallel_list\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setState(prevState => !prevState),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: action.get(\"name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"parallel_list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), state && open]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: action.get(\"key\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.second\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ActionlistButton, \"mzlAvVA2+qRqr4Q1rfXPqUSTNao=\");\n_c = ActionlistButton;\nvar _c;\n$RefreshReg$(_c, \"ActionlistButton\");","map":{"version":3,"names":["React","useState","ActionlistButton","props","action","element","state","setState","createButtons","console","log","get","undefined","map","currElement","index","open","prevState","second"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/ActionlistButton.tsx"],"sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport { DeleteAction } from './ActionFetch';\n\n/**\n * The ActionListPage is used to edit a list of actions by adding new action and deleting others\n */\nexport default function ActionlistButton (props) {\n    \n    const action = props.element;\n\n    const [state, setState] = useState(false);\n\n\n    const createButtons = () => {\n        console.log(action.get(\"content\"))\n        if (action.get(\"content\") !== undefined) {\n        return action.get(\"content\").map((currElement, index) => {\n            return <div>\n                <ActionlistButton key={index} element={currElement} />\n            </div>\n        })}\n        return <></>\n    }\n    \n    const open = createButtons();\n\n\n    if (action.get(\"key\") === \"sequential_list\") { // kennung so oder anders\n        return (\n            <div>\n                <button onClick = {() => setState(prevState => !prevState)}>\n                    <div>{action.get(\"name\")}</div>\n                    <div>equential_list</div>\n                </button>\n                {state && open}\n            </div>\n        )\n    } else if (action.get(\"key\") === \"parallel_list\") {\n        return (\n            <div>\n                <button onClick = {() => setState(prevState => !prevState)}>\n                    <div>{action.get(\"name\")}</div>\n                    <div>parallel_list</div>\n                </button>\n                {state && open}\n            </div>\n        )\n    }\n\n    return (\n        <button> \n            <div>{action.get(\"key\")}</div>\n            <div>{props.second}</div>\n        </button>\n    )\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAG9B;AACA;AACA;AACA,eAAe,SAASC,gBAAgB,CAAEC,KAAK,EAAE;EAAA;EAE7C,MAAMC,MAAM,GAAGD,KAAK,CAACE,OAAO;EAE5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAGzC,MAAMO,aAAa,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACO,GAAG,CAAC,SAAS,CAAC,CAAC;IAClC,IAAIP,MAAM,CAACO,GAAG,CAAC,SAAS,CAAC,KAAKC,SAAS,EAAE;MACzC,OAAOR,MAAM,CAACO,GAAG,CAAC,SAAS,CAAC,CAACE,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAK;QACrD,oBAAO;UAAA,uBACH,QAAC,gBAAgB;YAAa,OAAO,EAAED;UAAY,GAA5BC,KAAK;YAAA;YAAA;YAAA;UAAA;QAA0B;UAAA;UAAA;UAAA;QAAA,QACpD;MACV,CAAC,CAAC;IAAA;IACF,oBAAO,qCAAK;EAChB,CAAC;EAED,MAAMC,IAAI,GAAGR,aAAa,EAAE;EAG5B,IAAIJ,MAAM,CAACO,GAAG,CAAC,KAAK,CAAC,KAAK,iBAAiB,EAAE;IAAE;IAC3C,oBACI;MAAA,wBACI;QAAQ,OAAO,EAAI,MAAMJ,QAAQ,CAACU,SAAS,IAAI,CAACA,SAAS,CAAE;QAAA,wBACvD;UAAA,UAAMb,MAAM,CAACO,GAAG,CAAC,MAAM;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO,eAC/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB,EACRL,KAAK,IAAIU,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ;EAEd,CAAC,MAAM,IAAIZ,MAAM,CAACO,GAAG,CAAC,KAAK,CAAC,KAAK,eAAe,EAAE;IAC9C,oBACI;MAAA,wBACI;QAAQ,OAAO,EAAI,MAAMJ,QAAQ,CAACU,SAAS,IAAI,CAACA,SAAS,CAAE;QAAA,wBACvD;UAAA,UAAMb,MAAM,CAACO,GAAG,CAAC,MAAM;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO,eAC/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB,EACRL,KAAK,IAAIU,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ;EAEd;EAEA,oBACI;IAAA,wBACI;MAAA,UAAMZ,MAAM,CAACO,GAAG,CAAC,KAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9B;MAAA,UAAMR,KAAK,CAACe;IAAM;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAGjB;AAAC,GAlDuBhB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}