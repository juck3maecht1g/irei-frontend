{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/actionkind/ChooseVariablePage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport TopBar from '../../../TopBar';\nimport { SetCoordinateType, GetPositions, appendAction } from '../ActionFetch';\n\n/**\n * The ChooseVariablePage is used to choose \n * a variable for a robot to approach\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChooseVariablePage(props) {\n  _s();\n  const location = useLocation();\n  const {\n    kind\n  } = location.state;\n  const {\n    ip\n  } = location.state;\n  var state = \"joint\";\n  const [positions, setPositions] = useState([]); // 채hhhh array oder map?????????\n\n  const press = () => {\n    if (state === \"kartesisch\") {\n      state = \"kartesisch\";\n    } else {\n      state = \"joint\";\n    }\n    SetCoordinateType(state);\n    GetPositions(setPositions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Position\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: press,\n      children: state ? \"joint\" : \"kartesisch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), positions.map(number => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(ChooseVariablePage, \"5j+RSI3ahLOs09nwpifeF6ZDrV8=\", false, function () {\n  return [useLocation];\n});\n_c = ChooseVariablePage;\nfunction PositionButton(props) {\n  const sent = () => {\n    appendAction(\"\");\n  }; // Was genau und wie 체bergeben\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/ActionListPage\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n      onClick: sent,\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PositionButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChooseVariablePage\");\n$RefreshReg$(_c2, \"PositionButton\");","map":{"version":3,"names":["React","useState","Link","useLocation","TopBar","SetCoordinateType","GetPositions","appendAction","ChooseVariablePage","props","location","kind","state","ip","positions","setPositions","press","map","number","PositionButton","sent","name"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/controlPages/ActionPage/actionkind/ChooseVariablePage.tsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport TopBar from '../../../TopBar';\nimport { SetCoordinateType, GetPositions, appendAction } from '../ActionFetch';\n\n\n/**\n * The ChooseVariablePage is used to choose \n * a variable for a robot to approach\n */\nexport default function ChooseVariablePage (props) {\n\n    const location = useLocation();\n    const { kind } = location.state;\n    const { ip } = location.state;\n\n    var state = \"joint\";\n    const [positions, setPositions] = useState([]) // 채hhhh array oder map?????????\n    \n    const press = () => {\n        if (state === \"kartesisch\") {\n            state = \"kartesisch\";\n        } else {\n            state = \"joint\";\n        }\n        SetCoordinateType(state);\n        GetPositions(setPositions)\n    }\n\n    return (\n        <div>\n            <TopBar title=\"Choose Position\" />\n            <button onClick = {press}>\n                {state? \"joint\" : \"kartesisch\"}\n            </button>\n            {positions.map((number) => {\n                return <></>\n            })}\n        </div>\n    );\n}\n\nfunction PositionButton (props) {\n\n    const sent = () => {\n        appendAction(\"\")\n    } // Was genau und wie 체bergeben\n\n    return ( \n    <Link to = {\"/ActionListPage\"}>\n      <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\"\n      onClick = {sent}>\n        {props.name}\n      </button>\n    </Link>\n     );\n  }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,iBAAiB,EAAEC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;;AAG9E;AACA;AACA;AACA;AAHA;AAAA;AAIA,eAAe,SAASC,kBAAkB,CAAEC,KAAK,EAAE;EAAA;EAE/C,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM;IAAEQ;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAC/B,MAAM;IAAEC;EAAG,CAAC,GAAGH,QAAQ,CAACE,KAAK;EAE7B,IAAIA,KAAK,GAAG,OAAO;EACnB,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,EAAC;;EAE/C,MAAMe,KAAK,GAAG,MAAM;IAChB,IAAIJ,KAAK,KAAK,YAAY,EAAE;MACxBA,KAAK,GAAG,YAAY;IACxB,CAAC,MAAM;MACHA,KAAK,GAAG,OAAO;IACnB;IACAP,iBAAiB,CAACO,KAAK,CAAC;IACxBN,YAAY,CAACS,YAAY,CAAC;EAC9B,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,MAAM;MAAC,KAAK,EAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC;MAAQ,OAAO,EAAIC,KAAM;MAAA,UACpBJ,KAAK,GAAE,OAAO,GAAG;IAAY;MAAA;MAAA;MAAA;IAAA,QACzB,EACRE,SAAS,CAACG,GAAG,CAAEC,MAAM,IAAK;MACvB,oBAAO,qCAAK;IAChB,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,GA9BuBV,kBAAkB;EAAA,QAErBL,WAAW;AAAA;AAAA,KAFRK,kBAAkB;AAgC1C,SAASW,cAAc,CAAEV,KAAK,EAAE;EAE5B,MAAMW,IAAI,GAAG,MAAM;IACfb,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC,EAAC;;EAEF,oBACA,QAAC,IAAI;IAAC,EAAE,EAAI,iBAAkB;IAAA,uBAC5B;MAAQ,SAAS,EAAC,iGAAiG;MACnH,OAAO,EAAIa,IAAK;MAAA,UACbX,KAAK,CAACY;IAAI;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAET;AAAC,MAdMF,cAAc;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}