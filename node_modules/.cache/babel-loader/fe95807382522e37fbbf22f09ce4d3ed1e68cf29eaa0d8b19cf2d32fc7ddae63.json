{"ast":null,"code":"var _jsxFileName = \"/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseLaboratoryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchAdress = \"http://127.0.0.1:5000/test\";\nconst Massage = \"\";\n\n/**\n * The ChooseLaboratoryPage is used to choose \n * the Laboratory the user wants to work in\n */\nexport function ChooseLaboratoryPage() {\n  _s();\n  var [labNames, setLabs] = useState([]);\n  getLabNames(setLabs);\n  console.log(labNames);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n_s(ChooseLaboratoryPage, \"c7F15Hm1pCj9H6SToFcspcxFmXI=\");\n_c = ChooseLaboratoryPage;\nexport default ChooseLaboratoryPage;\nasync function getLabNames(setLabs) {\n  const data = await (await fetch(fetchAdress)).json().then(data => {\n    var labNames = [];\n    for (let i = 0; i < data.length; i++) {\n      labNames.push(data[i].name);\n    }\n  });\n\n  // set state when the data received\n}\nvar _c;\n$RefreshReg$(_c, \"ChooseLaboratoryPage\");","map":{"version":3,"names":["React","useState","fetchAdress","Massage","ChooseLaboratoryPage","labNames","setLabs","getLabNames","console","log","data","fetch","json","then","i","length","push","name"],"sources":["/home/sihi/irei-frontend/src/choosePages/chooseLaboratoryPage/ChooseLaboratoryPage.tsx"],"sourcesContent":["import { data } from 'browserslist'\nimport React, { useEffect, useState } from 'react'\nconst fetchAdress = \"http://127.0.0.1:5000/test\"\nconst Massage = \"\"\n\n/**\n * The ChooseLaboratoryPage is used to choose \n * the Laboratory the user wants to work in\n */\nexport function ChooseLaboratoryPage() {\n    var [labNames, setLabs] = useState([]);\n    \n    getLabNames(setLabs)\n  \n  console.log(labNames)\n    return ( \n      \n      <div>\n        \n      </div>\n    );\n\n    \n    \n\n    \n}\nexport default ChooseLaboratoryPage;\n\n\n\n\nasync function getLabNames(setLabs){\n    const data = await (\n      await fetch(\n        fetchAdress\n      )\n    ).json().then(data => {\n      var labNames = []\n      for(let i = 0; i < data.length; i++) {\n        labNames.push(data[i].name)\n      }\n    }\n    )\n  \n        // set state when the data received\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAA;AAClD,MAAMC,WAAW,GAAG,4BAA4B;AAChD,MAAMC,OAAO,GAAG,EAAE;;AAElB;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoB,GAAG;EAAA;EACnC,IAAI,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtCM,WAAW,CAACD,OAAO,CAAC;EAEtBE,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACnB,oBAEE;IAAA;IAAA;IAAA;EAAA,QAEM;AAOZ;AAAC,GAjBeD,oBAAoB;AAAA,KAApBA,oBAAoB;AAkBpC,eAAeA,oBAAoB;AAKnC,eAAeG,WAAW,CAACD,OAAO,EAAC;EAC/B,MAAMI,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACTT,WAAW,CACZ,EACDU,IAAI,EAAE,CAACC,IAAI,CAACH,IAAI,IAAI;IACpB,IAAIL,QAAQ,GAAG,EAAE;IACjB,KAAI,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACnCT,QAAQ,CAACW,IAAI,CAACN,IAAI,CAACI,CAAC,CAAC,CAACG,IAAI,CAAC;IAC7B;EACF,CAAC,CACA;;EAEG;AACR;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}