{"ast":null,"code":"import { post } from \"./BasicOpperations\";\nconst postAdressExpRobots = \"http://127.0.0.1:5000/api/setRobotsExp\";\nconst postAdressChangeGripperRobots = \"http://127.0.0.1:5000/api/api/setRobotsGripper\";\nconst postAdressSavePositionRobots = \"http://127.0.0.1:5000/api/api/setSavePosition\";\nexport async function SetExpRobots(action, robots, setErrorMessage) {\n  var ipList = [];\n  for (var key of robots.keys()) {\n    ipList.push(key);\n  }\n  var message = new Map();\n  message.set(\"marker\", \"SetExpRobots\");\n  message.set(\"robot_ips\", ipList);\n  var reload = false;\n  const result = Object.fromEntries(message);\n  await post(result, postAdressExpRobots).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      console.log(1);\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c = SetExpRobots;\nexport async function SetChangeGripperRobots(action, robots, setErrorMessage) {\n  var ipList = [];\n  for (var key of robots.keys()) {\n    ipList.push(key);\n  }\n  var message = new Map();\n  message.set(\"marker\", \"SetChangeGripperRobots\");\n  message.set(\"robot_ips\", ipList);\n  var reload = false;\n  const result = Object.fromEntries(message);\n  await post(result, postAdressChangeGripperRobots).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      console.log(1);\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c2 = SetChangeGripperRobots;\nexport async function SetSavePositionRobot(action, robots, setErrorMessage) {\n  var ipList = [];\n  for (var key of robots.keys()) {\n    ipList.push(key);\n  }\n  var message = new Map();\n  message.set(\"marker\", \"SetSavePositionRobot\");\n  message.set(\"robot_ip\", ipList);\n  var reload = false;\n  const result = Object.fromEntries(message);\n  await post(result, postAdressSavePositionRobots).then(res => {\n    if (res !== \"Done\") {\n      setErrorMessage(res);\n      action();\n      console.log(1);\n      reload = false;\n    } else {\n      reload = true;\n    }\n  });\n  return reload;\n}\n_c3 = SetSavePositionRobot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SetExpRobots\");\n$RefreshReg$(_c2, \"SetChangeGripperRobots\");\n$RefreshReg$(_c3, \"SetSavePositionRobot\");","map":{"version":3,"names":["post","postAdressExpRobots","postAdressChangeGripperRobots","postAdressSavePositionRobots","SetExpRobots","action","robots","setErrorMessage","ipList","key","keys","push","message","Map","set","reload","result","Object","fromEntries","then","res","console","log","SetChangeGripperRobots","SetSavePositionRobot"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/backendComunication/SetRobots.tsx"],"sourcesContent":["import { post } from \"./BasicOpperations\"\n\nconst postAdressExpRobots = \"http://127.0.0.1:5000/api/setRobotsExp\"\nconst postAdressChangeGripperRobots= \"http://127.0.0.1:5000/api/api/setRobotsGripper\"\nconst postAdressSavePositionRobots = \"http://127.0.0.1:5000/api/api/setSavePosition\"\n\n\n\nexport async function SetExpRobots(action, robots, setErrorMessage){\n    var ipList = []\n    for(var key of robots.keys()){\n      ipList.push(key)\n    }\n    var message =  new Map()\n    message.set(\"marker\", \"SetExpRobots\")\n    message.set(\"robot_ips\", ipList)\n    var reload = false\n    const result = Object.fromEntries(message)\n    await post(result, postAdressExpRobots).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n            console.log(1)\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n  }\nexport async function SetChangeGripperRobots(action, robots, setErrorMessage){\n  var ipList = []\n    for(var key of robots.keys()){\n      ipList.push(key)\n    }\n    var message =  new Map()\n    message.set(\"marker\", \"SetChangeGripperRobots\")\n    message.set(\"robot_ips\", ipList)\n    var reload = false\n    const result = Object.fromEntries(message)\n    await post(result, postAdressChangeGripperRobots).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n            console.log(1)\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n}\nexport async function SetSavePositionRobot(action, robots, setErrorMessage){\n  var ipList = []\n    for(var key of robots.keys()){\n      ipList.push(key)\n    }\n    var message =  new Map()\n    message.set(\"marker\", \"SetSavePositionRobot\")\n    message.set(\"robot_ip\", ipList)\n    var reload = false\n    const result = Object.fromEntries(message)\n    await post(result, postAdressSavePositionRobots).then(res => {\n        if(res !== \"Done\") {\n            setErrorMessage(res)\n            action()\n            console.log(1)\n           reload = false\n        }\n      else {\n       reload = true\n      }\n    })\n\n    return reload\n\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}