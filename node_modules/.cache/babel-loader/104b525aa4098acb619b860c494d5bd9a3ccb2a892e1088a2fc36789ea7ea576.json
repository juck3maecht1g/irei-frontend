{"ast":null,"code":"var _jsxFileName = \"/home/sihi/irei-frontend/src/choosePages/chooseRobotPage/RobotPositionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GetExpRobots } from '../../backendComunication/FetchRobots';\nimport TopBar from '../../TopBar';\nimport { SetSavePositionRobot } from '../../backendComunication/SetRobots';\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RobotPositionPage(props) {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\");\n  const [error, setError] = useState(false);\n  const errorState = () => {\n    setError(current => !current);\n  };\n  const changerobots = ip => {\n    SetSavePositionRobot(errorState, ip, setErrorMessage);\n  };\n  var [robots, setRobots] = useState(test); //new Map<string, string>()\n  GetExpRobots(setRobots);\n  const arrRobots = Array.from(robots, function (entry) {\n    return {\n      key: entry[0],\n      value: entry[1]\n    };\n  });\n  const buttons = arrRobots.map(number => {\n    return /*#__PURE__*/_jsxDEV(RobotButton, {\n      data_key: number.key,\n      name: number.value,\n      execute: changerobots\n    }, number.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Choose Robot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), buttons]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\n_s(RobotPositionPage, \"UkmR1X4cpoDlBR3PK3bHxyWdCZU=\");\n_c = RobotPositionPage;\nfunction RobotButton(props) {\n  return (\n    /*#__PURE__*/\n    // noch zurückschicken wenn Gripper\n    _jsxDEV(Link, {\n      to: \"/Controlpage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.execute(props.data_key),\n        className: \"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.data_key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = RobotButton;\nvar test = new Map();\ntest.set(\"123.234.346\", \"clara\");\ntest.set(\"985.234.346\", \"andre\");\ntest.set(\"444.234.466\", \"tessa\");\ntest.set(\"333.356.875\", \"hannah\");\ntest.set(\"875.356.234\", \"julie\");\ntest.set(\"024.444.346\", \"dominik\");\nvar _c, _c2;\n$RefreshReg$(_c, \"RobotPositionPage\");\n$RefreshReg$(_c2, \"RobotButton\");","map":{"version":3,"names":["React","useState","Link","GetExpRobots","TopBar","SetSavePositionRobot","RobotPositionPage","props","errorMessage","setErrorMessage","error","setError","errorState","current","changerobots","ip","robots","setRobots","test","arrRobots","Array","from","entry","key","value","buttons","map","number","RobotButton","execute","data_key","name","Map","set"],"sources":["/home/sihi/irei-frontend/src/choosePages/chooseRobotPage/RobotPositionPage.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { GetExpRobots } from '../../backendComunication/FetchRobots';\nimport TopBar from '../../TopBar';\nimport { SetSavePositionRobot } from '../../backendComunication/SetRobots';\n\n/**\n * The ChooserobotPage is used to choose the robots\n * the user wants to work with\n */\nexport default function RobotPositionPage(props){\n  const [errorMessage, setErrorMessage] = useState(\"sorry position could not be saved\")\n  const [error, setError] = useState(false)\n  const errorState = () => {\n      setError(current => !current)\n    }\n\n    const changerobots = (ip) => {\n      SetSavePositionRobot(errorState, ip, setErrorMessage)\n    }\n\n    var [robots, setRobots] = useState(test); //new Map<string, string>()\n    GetExpRobots(setRobots)\n\n    const arrRobots = Array.from(robots, function (entry) {\n      return { key: entry[0], value: entry[1]};\n    });\n\n    const buttons = arrRobots.map((number) => {\n      return <RobotButton key={number.key} data_key={number.key} name= {number.value} execute={changerobots}/>\n    })\n\n    return (\n      <div>\n        <TopBar title=\"Choose Robot\"/>\n        {buttons}\n      </div>\n    )\n}\n\n/**\n * The RobotButton is used to choose \n * the Robot which is displayed from this Button\n */\nfunction RobotButton (props) {\n\n  return (   // noch zurückschicken wenn Gripper\n    <Link to = {\"/Controlpage\"}>\n        <button onClick = {()=>props.execute(props.data_key)}\n        className=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\">\n          <div>{props.name}</div>\n          <div>{props.data_key}</div>\n        </button>\n    </Link>\n   );\n}\n\nvar test = new Map();\ntest.set(\"123.234.346\", \"clara\")\ntest.set(\"985.234.346\", \"andre\")\ntest.set(\"444.234.466\", \"tessa\")\ntest.set(\"333.356.875\", \"hannah\")\ntest.set(\"875.356.234\", \"julie\")\ntest.set(\"024.444.346\", \"dominik\")"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAqB,kBAAkB;AACpD,SAASC,YAAY,QAAQ,uCAAuC;AACpE,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,oBAAoB,QAAQ,qCAAqC;;AAE1E;AACA;AACA;AACA;AAHA;AAIA,eAAe,SAASC,iBAAiB,CAACC,KAAK,EAAC;EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,mCAAmC,CAAC;EACrF,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMW,UAAU,GAAG,MAAM;IACrBD,QAAQ,CAACE,OAAO,IAAI,CAACA,OAAO,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3BV,oBAAoB,CAACO,UAAU,EAAEG,EAAE,EAAEN,eAAe,CAAC;EACvD,CAAC;EAED,IAAI,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAACiB,IAAI,CAAC,CAAC,CAAC;EAC1Cf,YAAY,CAACc,SAAS,CAAC;EAEvB,MAAME,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACL,MAAM,EAAE,UAAUM,KAAK,EAAE;IACpD,OAAO;MAAEC,GAAG,EAAED,KAAK,CAAC,CAAC,CAAC;MAAEE,KAAK,EAAEF,KAAK,CAAC,CAAC;IAAC,CAAC;EAC1C,CAAC,CAAC;EAEF,MAAMG,OAAO,GAAGN,SAAS,CAACO,GAAG,CAAEC,MAAM,IAAK;IACxC,oBAAO,QAAC,WAAW;MAAkB,QAAQ,EAAEA,MAAM,CAACJ,GAAI;MAAC,IAAI,EAAGI,MAAM,CAACH,KAAM;MAAC,OAAO,EAAEV;IAAa,GAA7Ea,MAAM,CAACJ,GAAG;MAAA;MAAA;MAAA;IAAA,QAAqE;EAC1G,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,EAC7BE,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ;;AAEA;AACA;AACA;AACA;AAHA,GA9BwBnB,iBAAiB;AAAA,KAAjBA,iBAAiB;AAkCzC,SAASsB,WAAW,CAAErB,KAAK,EAAE;EAE3B;IAAA;IAAW;IACT,QAAC,IAAI;MAAC,EAAE,EAAI,cAAe;MAAA,uBACvB;QAAQ,OAAO,EAAI,MAAIA,KAAK,CAACsB,OAAO,CAACtB,KAAK,CAACuB,QAAQ,CAAE;QACrD,SAAS,EAAC,qFAAqF;QAAA,wBAC7F;UAAA,UAAMvB,KAAK,CAACwB;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,eACvB;UAAA,UAAMxB,KAAK,CAACuB;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IACpB;MAAA;MAAA;MAAA;IAAA;EACN;AAEX;AAAC,MAXQF,WAAW;AAapB,IAAIV,IAAI,GAAG,IAAIc,GAAG,EAAE;AACpBd,IAAI,CAACe,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAChCf,IAAI,CAACe,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAChCf,IAAI,CAACe,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAChCf,IAAI,CAACe,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC;AACjCf,IAAI,CAACe,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAChCf,IAAI,CAACe,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}