{"ast":null,"code":"var _jsxFileName = \"/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseRobotPage/MappingRobots.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport Popup from '../../PopUp/PopUp';\nimport ChooseRobotsForMappingPage from './ChooseRobotsForMapping';\nimport '../../irei_styles.css';\nimport { GetMapping, SetMapping } from '../../controlPages/ActionPage/ActionFetch';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MappingRobotsPage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(\"sorry robots couldnt be changed\");\n  const [error, setError] = useState(false);\n  const errorState = () => {\n    setError(current => !current);\n  };\n  var [roles, setRoles] = useState([help1, help2, help3, help4]);\n  GetMapping(setRoles);\n  const setChoice = (ip, number) => {\n    var changed = [...roles];\n    changed[number].set(\"robot\", ip);\n    setRoles(changed);\n  };\n  const sentToBackend = () => {\n    /*var changed = []\n    for (let i=0; i<roles.length; i++) {\n        changed.push(roles[i].get(\"robot\"));\n    }\n    console.log(changed) // changed to Backend\n    console.log(index) // changed to Backend\n    */\n    SetMapping(roles, errorState, setErrorMessage);\n  };\n  const buttons = roles.map((element, index) => {\n    return /*#__PURE__*/_jsxDEV(MappingRobotsButton, {\n      index: index,\n      element: element.get(\"robot\"),\n      action: element.get(\"name\"),\n      chosen: setChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"mapping of robots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), buttons, /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/ActionListPage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n        onClick: sentToBackend,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorPopUp, {\n      active: error,\n      deactivate: errorState,\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(MappingRobotsPage, \"ewMk2mhJk8OVHb+2NFxJeoy9HfY=\");\n_c = MappingRobotsPage;\nfunction MappingRobotsButton(props) {\n  _s2();\n  const [open, setOpen] = useState(false);\n  const setChoice = (ip, number) => {\n    props.chosen(ip, number);\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.index, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\",\n      onClick: () => setOpen(true),\n      children: props.element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), props.action, /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: open,\n      children: /*#__PURE__*/_jsxDEV(ChooseRobotsForMappingPage, {\n        number: props.index,\n        execute: setChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s2(MappingRobotsButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c2 = MappingRobotsButton;\nconst help1 = new Map();\nhelp1.set(\"name\", \"gripperOpen\");\nhelp1.set(\"robot\", \"234.846.984\");\nconst help2 = new Map();\nhelp2.set(\"name\", \"steering\");\nhelp2.set(\"robot\", \"435.600.000\");\nconst help3 = new Map();\nhelp3.set(\"name\", \"gripperClose\");\nhelp3.set(\"robot\", \"129.666.876\");\nconst help4 = new Map();\nhelp4.set(\"name\", \"wait\");\nhelp4.set(\"robot\", \"657.674.111\");\nvar _c, _c2;\n$RefreshReg$(_c, \"MappingRobotsPage\");\n$RefreshReg$(_c2, \"MappingRobotsButton\");","map":{"version":3,"names":["React","useState","Link","TopBar","Popup","ChooseRobotsForMappingPage","GetMapping","SetMapping","ErrorPopUp","MappingRobotsPage","errorMessage","setErrorMessage","error","setError","errorState","current","roles","setRoles","help1","help2","help3","help4","setChoice","ip","number","changed","set","sentToBackend","buttons","map","element","index","get","MappingRobotsButton","props","open","setOpen","chosen","action","Map"],"sources":["/Users/justushund/Documents/irei1/irei-frontend/src/choosePages/chooseRobotPage/MappingRobots.tsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport TopBar from '../../TopBar';\nimport Popup from '../../PopUp/PopUp';\nimport ChooseRobotsForMappingPage from './ChooseRobotsForMapping';\nimport '../../irei_styles.css'\nimport { convertBackToFrontMapping, GetMapping, SetMapping, SetMappingPos } from '../../controlPages/ActionPage/ActionFetch';\nimport { ErrorPopUp } from '../../PopUp/ErrorPopUP';\n\nexport default function MappingRobotsPage () {\n\n    const [errorMessage, setErrorMessage] = useState(\"sorry robots couldnt be changed\")\n    const [error, setError] = useState(false)\n    const errorState = () => {\n        setError(current => !current)\n    }\n\n\n\n    var [roles, setRoles] = useState([help1, help2, help3, help4])\n    GetMapping(setRoles)\n\n    const setChoice = (ip, number) => {\n        var changed = [...roles]\n        changed[number].set(\"robot\", ip);\n        setRoles(changed)\n    }\n\n    const sentToBackend = () => {\n        /*var changed = []\n        for (let i=0; i<roles.length; i++) {\n            changed.push(roles[i].get(\"robot\"));\n        }\n        console.log(changed) // changed to Backend\n        console.log(index) // changed to Backend\n        */\n        SetMapping(roles, errorState, setErrorMessage)\n    }\n\n    const buttons = roles.map((element, index) => {\n        return <MappingRobotsButton index = {index} element={element.get(\"robot\")} action={element.get(\"name\")} chosen={setChoice} />\n    })\n\n    return (\n        <div>\n            <TopBar title= \"mapping of robots\"/>\n            {buttons}\n            <Link to={\"/ActionListPage\"}>\n                <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" onClick={sentToBackend}>\n                <i className=\"material-icons\">check</i>\n                </button>\n            </Link>\n            <ErrorPopUp active={error} deactivate={errorState} message={errorMessage}/>\n        </div>\n    )\n}\n\nfunction MappingRobotsButton (props) {\n    const [open, setOpen] = useState(false);\n\n\n    const setChoice = (ip, number) => {\n        props.chosen(ip,number)\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            {props.index} \n            <button className=\"irei-button mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" onClick = {() => setOpen(true)}>\n                {props.element}\n            </button>\n            {props.action}\n            <Popup trigger = {open}>\n            <ChooseRobotsForMappingPage number = {props.index} execute={setChoice}/>\n             </Popup>\n        </div>\n    )\n}\n\nconst help1 = new Map();\nhelp1.set(\"name\", \"gripperOpen\")\nhelp1.set(\"robot\", \"234.846.984\")\n\nconst help2 = new Map();\nhelp2.set(\"name\", \"steering\")\nhelp2.set(\"robot\", \"435.600.000\")\n\nconst help3 = new Map();\nhelp3.set(\"name\", \"gripperClose\")\nhelp3.set(\"robot\", \"129.666.876\")\n\nconst help4 = new Map();\nhelp4.set(\"name\", \"wait\")\nhelp4.set(\"robot\", \"657.674.111\")"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}